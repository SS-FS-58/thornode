image: golang:1.13

cache:
  paths:
    - .cache

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"
  - go get mvdan.cc/gofumpt

stages:
  - test
  - build
  - smoke-test
  - push
  - deploy
  - seed

unit_tests:
  stage: test
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'
  variables:
    SignerName: "statechain"
    SignerPasswd: "password"
  script:
    - go test -tags testnet -mod=readonly -v -coverprofile=coverage.out ./...
    - go tool cover -func=coverage.out

lint_code:
  image: golangci/golangci-lint
  stage: test
  script:
    - make lint-verbose

integration:test:
  image: cbarraford/golang-ruby
  stage: test
  variables:
    NET: "testnet"
    TAG: "testnet"
  script:
    - make -C ./test/integration install setup run wait-for-blockchain test-internal

# Build docker image
build-thornode:
  stage: build
  image: docker:stable
  only:
    - master
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - apk update
    - apk add python py-pip make git jq curl
    - make docker-gitlab-login
  script:
    - make docker-gitlab-build
    - make docker-gitlab-push

smoke-test:thornode:
  stage: smoke-test
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  artifacts:
    when: on_failure
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./logs/
  before_script:
    - apk update
    - apk add --no-cache --virtual .build-deps g++ python3-dev libffi-dev openssl-dev
    - apk add python3 py-pip make git jq curl
    - git clone --single-branch -b $CI_COMMIT_BRANCH https://gitlab.com/thorchain/heimdall.git || git clone --single-branch -b master https://gitlab.com/thorchain/heimdall.git
    - pip3 install -r ./heimdall/requirements.txt
    - make -C build/docker reset-mocknet-standalone
  except:
    - schedules
  environment:
    name: integration
  script:
    - python3 ./heimdall/smoke.py --binance http://docker:26660 --thorchain http://docker:1317
  after_script:
    - ./scripts/docker_logs.sh

deploy:
  #stage: deploy
  image: docker:stable
  only:
    - daily-automated-churning
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add python git py-pip make bash curl python-dev libffi-dev openssl-dev gcc libc-dev jq
    - pip install awscli docker-compose
    - make aws-ci-login
  script:
    - cd $CI_PROJECT_DIR/build/docker
    - bash aws_testnet.sh ci
