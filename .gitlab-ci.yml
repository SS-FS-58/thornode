image: golang:1.13

cache:
  paths:
    - .cache

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"

stages:
  - test
  - build
  - smoke-test
  - push
  - deploy
  - seed

unit_tests:
  stage: test
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'
  variables:
    SignerName: "statechain"
    SignerPasswd: "password"
  script:
    - go test -mod=readonly -v -coverprofile=coverage.out ./...
    - go tool cover -func=coverage.out

lint_code:
  image: golangci/golangci-lint
  stage: test
  script:
    - make lint-verbose

integration:test:
  image: cbarraford/golang-ruby
  stage: test
  variables:
    NET: "testnet"
  script:
    - make -C ./test/integration install setup run wait-for-blockchain test-internal

post:
  stage: .post
  script:
    - ./scripts/docker_logs.sh
  artifacts:
    when: on_failure
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - /tmp/logs/

# Build docker image
build-thornode:
  stage: build
  image: docker:stable
  only:
    - master
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker run --rm alpine false

smoke-test:thornode:
  stage: smoke-test
  image: cbarraford/docker-golang
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - export GOBIN=$GOPATH/bin
  except:
    - schedules
  environment:
    name: integration
  script: 
    - docker run --rm alpine false
